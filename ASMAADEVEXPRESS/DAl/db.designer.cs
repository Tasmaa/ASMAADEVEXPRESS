#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASMAADEVEXPRESS.DAl
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Contract_invoice")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcontract_name(contract_name instance);
    partial void Updatecontract_name(contract_name instance);
    partial void Deletecontract_name(contract_name instance);
    partial void InsertContractExtension(ContractExtension instance);
    partial void UpdateContractExtension(ContractExtension instance);
    partial void DeleteContractExtension(ContractExtension instance);
    partial void Insertdelay_table(delay_table instance);
    partial void Updatedelay_table(delay_table instance);
    partial void Deletedelay_table(delay_table instance);
    partial void Insertdelay_table2(delay_table2 instance);
    partial void Updatedelay_table2(delay_table2 instance);
    partial void Deletedelay_table2(delay_table2 instance);
    partial void Insertextenation_table(extenation_table instance);
    partial void Updateextenation_table(extenation_table instance);
    partial void Deleteextenation_table(extenation_table instance);
    partial void Insertextenation_table2(extenation_table2 instance);
    partial void Updateextenation_table2(extenation_table2 instance);
    partial void Deleteextenation_table2(extenation_table2 instance);
    partial void Insertinvoice_table2(invoice_table2 instance);
    partial void Updateinvoice_table2(invoice_table2 instance);
    partial void Deleteinvoice_table2(invoice_table2 instance);
    partial void InsertjobTitle(jobTitle instance);
    partial void UpdatejobTitle(jobTitle instance);
    partial void DeletejobTitle(jobTitle instance);
    partial void Insertproject_t(project_t instance);
    partial void Updateproject_t(project_t instance);
    partial void Deleteproject_t(project_t instance);
    partial void Insertproject_table(project_table instance);
    partial void Updateproject_table(project_table instance);
    partial void Deleteproject_table(project_table instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserSettingProfile(UserSettingProfile instance);
    partial void UpdateUserSettingProfile(UserSettingProfile instance);
    partial void DeleteUserSettingProfile(UserSettingProfile instance);
    partial void InsertUserSettingProfileProperty(UserSettingProfileProperty instance);
    partial void UpdateUserSettingProfileProperty(UserSettingProfileProperty instance);
    partial void DeleteUserSettingProfileProperty(UserSettingProfileProperty instance);
    #endregion
		
		public dbDataContext() : 
				base(global::ASMAADEVEXPRESS.Properties.Settings.Default.Contract_invoiceConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<contract_name> contract_names
		{
			get
			{
				return this.GetTable<contract_name>();
			}
		}
		
		public System.Data.Linq.Table<ContractExtension> ContractExtensions
		{
			get
			{
				return this.GetTable<ContractExtension>();
			}
		}
		
		public System.Data.Linq.Table<delay_table> delay_tables
		{
			get
			{
				return this.GetTable<delay_table>();
			}
		}
		
		public System.Data.Linq.Table<delay_table2> delay_table2s
		{
			get
			{
				return this.GetTable<delay_table2>();
			}
		}
		
		public System.Data.Linq.Table<extenation_table> extenation_tables
		{
			get
			{
				return this.GetTable<extenation_table>();
			}
		}
		
		public System.Data.Linq.Table<extenation_table2> extenation_table2s
		{
			get
			{
				return this.GetTable<extenation_table2>();
			}
		}
		
		public System.Data.Linq.Table<invoice_table> invoice_tables
		{
			get
			{
				return this.GetTable<invoice_table>();
			}
		}
		
		public System.Data.Linq.Table<invoice_table2> invoice_table2s
		{
			get
			{
				return this.GetTable<invoice_table2>();
			}
		}
		
		public System.Data.Linq.Table<jobTitle> jobTitles
		{
			get
			{
				return this.GetTable<jobTitle>();
			}
		}
		
		public System.Data.Linq.Table<project_t> project_ts
		{
			get
			{
				return this.GetTable<project_t>();
			}
		}
		
		public System.Data.Linq.Table<project_table> project_tables
		{
			get
			{
				return this.GetTable<project_table>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserSettingProfile> UserSettingProfiles
		{
			get
			{
				return this.GetTable<UserSettingProfile>();
			}
		}
		
		public System.Data.Linq.Table<UserSettingProfileProperty> UserSettingProfileProperties
		{
			get
			{
				return this.GetTable<UserSettingProfileProperty>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.contract_name")]
	public partial class contract_name : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractNameId;
		
		private string _contract_name1;
		
		private EntitySet<project_table> _project_tables;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractNameIdChanging(int value);
    partial void OnContractNameIdChanged();
    partial void Oncontract_name1Changing(string value);
    partial void Oncontract_name1Changed();
    #endregion
		
		public contract_name()
		{
			this._project_tables = new EntitySet<project_table>(new Action<project_table>(this.attach_project_tables), new Action<project_table>(this.detach_project_tables));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNameId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContractNameId
		{
			get
			{
				return this._ContractNameId;
			}
			set
			{
				if ((this._ContractNameId != value))
				{
					this.OnContractNameIdChanging(value);
					this.SendPropertyChanging();
					this._ContractNameId = value;
					this.SendPropertyChanged("ContractNameId");
					this.OnContractNameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contract_name1", DbType="NVarChar(50)")]
		public string contract_name1
		{
			get
			{
				return this._contract_name1;
			}
			set
			{
				if ((this._contract_name1 != value))
				{
					this.Oncontract_name1Changing(value);
					this.SendPropertyChanging();
					this._contract_name1 = value;
					this.SendPropertyChanged("contract_name1");
					this.Oncontract_name1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contract_name_project_table", Storage="_project_tables", ThisKey="ContractNameId", OtherKey="ContractNameId")]
		public EntitySet<project_table> project_tables
		{
			get
			{
				return this._project_tables;
			}
			set
			{
				this._project_tables.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_project_tables(project_table entity)
		{
			this.SendPropertyChanging();
			entity.contract_name = this;
		}
		
		private void detach_project_tables(project_table entity)
		{
			this.SendPropertyChanging();
			entity.contract_name = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContractExtension")]
	public partial class ContractExtension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContractExtensionId;
		
		private System.Nullable<int> _project_id;
		
		private string _ContractExtenationNo;
		
		private System.Data.Linq.Binary _image;
		
		private EntitySet<delay_table2> _delay_table2s;
		
		private EntitySet<extenation_table2> _extenation_table2s;
		
		private EntitySet<invoice_table2> _invoice_table2s;
		
		private EntityRef<project_table> _project_table;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContractExtensionIdChanging(int value);
    partial void OnContractExtensionIdChanged();
    partial void Onproject_idChanging(System.Nullable<int> value);
    partial void Onproject_idChanged();
    partial void OnContractExtenationNoChanging(string value);
    partial void OnContractExtenationNoChanged();
    partial void OnimageChanging(System.Data.Linq.Binary value);
    partial void OnimageChanged();
    #endregion
		
		public ContractExtension()
		{
			this._delay_table2s = new EntitySet<delay_table2>(new Action<delay_table2>(this.attach_delay_table2s), new Action<delay_table2>(this.detach_delay_table2s));
			this._extenation_table2s = new EntitySet<extenation_table2>(new Action<extenation_table2>(this.attach_extenation_table2s), new Action<extenation_table2>(this.detach_extenation_table2s));
			this._invoice_table2s = new EntitySet<invoice_table2>(new Action<invoice_table2>(this.attach_invoice_table2s), new Action<invoice_table2>(this.detach_invoice_table2s));
			this._project_table = default(EntityRef<project_table>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractExtensionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContractExtensionId
		{
			get
			{
				return this._ContractExtensionId;
			}
			set
			{
				if ((this._ContractExtensionId != value))
				{
					this.OnContractExtensionIdChanging(value);
					this.SendPropertyChanging();
					this._ContractExtensionId = value;
					this.SendPropertyChanged("ContractExtensionId");
					this.OnContractExtensionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int")]
		public System.Nullable<int> project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					if (this._project_table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_idChanging(value);
					this.SendPropertyChanging();
					this._project_id = value;
					this.SendPropertyChanged("project_id");
					this.Onproject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractExtenationNo", DbType="NVarChar(50)")]
		public string ContractExtenationNo
		{
			get
			{
				return this._ContractExtenationNo;
			}
			set
			{
				if ((this._ContractExtenationNo != value))
				{
					this.OnContractExtenationNoChanging(value);
					this.SendPropertyChanging();
					this._ContractExtenationNo = value;
					this.SendPropertyChanged("ContractExtenationNo");
					this.OnContractExtenationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractExtension_delay_table2", Storage="_delay_table2s", ThisKey="ContractExtensionId", OtherKey="ContractExtensionId")]
		public EntitySet<delay_table2> delay_table2s
		{
			get
			{
				return this._delay_table2s;
			}
			set
			{
				this._delay_table2s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractExtension_extenation_table2", Storage="_extenation_table2s", ThisKey="ContractExtensionId", OtherKey="ContractExtensionId")]
		public EntitySet<extenation_table2> extenation_table2s
		{
			get
			{
				return this._extenation_table2s;
			}
			set
			{
				this._extenation_table2s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractExtension_invoice_table2", Storage="_invoice_table2s", ThisKey="ContractExtensionId", OtherKey="ContractExtensionId")]
		public EntitySet<invoice_table2> invoice_table2s
		{
			get
			{
				return this._invoice_table2s;
			}
			set
			{
				this._invoice_table2s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_table_ContractExtension", Storage="_project_table", ThisKey="project_id", OtherKey="project_id", IsForeignKey=true)]
		public project_table project_table
		{
			get
			{
				return this._project_table.Entity;
			}
			set
			{
				project_table previousValue = this._project_table.Entity;
				if (((previousValue != value) 
							|| (this._project_table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project_table.Entity = null;
						previousValue.ContractExtensions.Remove(this);
					}
					this._project_table.Entity = value;
					if ((value != null))
					{
						value.ContractExtensions.Add(this);
						this._project_id = value.project_id;
					}
					else
					{
						this._project_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("project_table");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_delay_table2s(delay_table2 entity)
		{
			this.SendPropertyChanging();
			entity.ContractExtension = this;
		}
		
		private void detach_delay_table2s(delay_table2 entity)
		{
			this.SendPropertyChanging();
			entity.ContractExtension = null;
		}
		
		private void attach_extenation_table2s(extenation_table2 entity)
		{
			this.SendPropertyChanging();
			entity.ContractExtension = this;
		}
		
		private void detach_extenation_table2s(extenation_table2 entity)
		{
			this.SendPropertyChanging();
			entity.ContractExtension = null;
		}
		
		private void attach_invoice_table2s(invoice_table2 entity)
		{
			this.SendPropertyChanging();
			entity.ContractExtension = this;
		}
		
		private void detach_invoice_table2s(invoice_table2 entity)
		{
			this.SendPropertyChanging();
			entity.ContractExtension = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.delay_table")]
	public partial class delay_table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _project_id;
		
		private string _Duration;
		
		private System.Nullable<System.DateTime> _from_date;
		
		private System.Nullable<System.DateTime> _to_date;
		
		private System.Nullable<int> _BookNo;
		
		private System.Nullable<System.DateTime> _BookDate;
		
		private EntityRef<project_table> _project_table;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onproject_idChanging(System.Nullable<int> value);
    partial void Onproject_idChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void Onfrom_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onfrom_dateChanged();
    partial void Onto_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onto_dateChanged();
    partial void OnBookNoChanging(System.Nullable<int> value);
    partial void OnBookNoChanged();
    partial void OnBookDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBookDateChanged();
    #endregion
		
		public delay_table()
		{
			this._project_table = default(EntityRef<project_table>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int")]
		public System.Nullable<int> project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					if (this._project_table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_idChanging(value);
					this.SendPropertyChanging();
					this._project_id = value;
					this.SendPropertyChanged("project_id");
					this.Onproject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(50)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_from_date", DbType="Date")]
		public System.Nullable<System.DateTime> from_date
		{
			get
			{
				return this._from_date;
			}
			set
			{
				if ((this._from_date != value))
				{
					this.Onfrom_dateChanging(value);
					this.SendPropertyChanging();
					this._from_date = value;
					this.SendPropertyChanged("from_date");
					this.Onfrom_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_to_date", DbType="Date")]
		public System.Nullable<System.DateTime> to_date
		{
			get
			{
				return this._to_date;
			}
			set
			{
				if ((this._to_date != value))
				{
					this.Onto_dateChanging(value);
					this.SendPropertyChanging();
					this._to_date = value;
					this.SendPropertyChanged("to_date");
					this.Onto_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookNo", DbType="Int")]
		public System.Nullable<int> BookNo
		{
			get
			{
				return this._BookNo;
			}
			set
			{
				if ((this._BookNo != value))
				{
					this.OnBookNoChanging(value);
					this.SendPropertyChanging();
					this._BookNo = value;
					this.SendPropertyChanged("BookNo");
					this.OnBookNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDate", DbType="Date")]
		public System.Nullable<System.DateTime> BookDate
		{
			get
			{
				return this._BookDate;
			}
			set
			{
				if ((this._BookDate != value))
				{
					this.OnBookDateChanging(value);
					this.SendPropertyChanging();
					this._BookDate = value;
					this.SendPropertyChanged("BookDate");
					this.OnBookDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_table_delay_table", Storage="_project_table", ThisKey="project_id", OtherKey="project_id", IsForeignKey=true)]
		public project_table project_table
		{
			get
			{
				return this._project_table.Entity;
			}
			set
			{
				project_table previousValue = this._project_table.Entity;
				if (((previousValue != value) 
							|| (this._project_table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project_table.Entity = null;
						previousValue.delay_tables.Remove(this);
					}
					this._project_table.Entity = value;
					if ((value != null))
					{
						value.delay_tables.Add(this);
						this._project_id = value.project_id;
					}
					else
					{
						this._project_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("project_table");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.delay_table2")]
	public partial class delay_table2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _ContractExtensionId;
		
		private string _Duration;
		
		private System.Nullable<System.DateTime> _from_date;
		
		private System.Nullable<System.DateTime> _to_date;
		
		private System.Nullable<int> _BookNo;
		
		private System.Nullable<System.DateTime> _BookDate;
		
		private EntityRef<ContractExtension> _ContractExtension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnContractExtensionIdChanging(System.Nullable<int> value);
    partial void OnContractExtensionIdChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void Onfrom_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onfrom_dateChanged();
    partial void Onto_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onto_dateChanged();
    partial void OnBookNoChanging(System.Nullable<int> value);
    partial void OnBookNoChanged();
    partial void OnBookDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBookDateChanged();
    #endregion
		
		public delay_table2()
		{
			this._ContractExtension = default(EntityRef<ContractExtension>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractExtensionId", DbType="Int")]
		public System.Nullable<int> ContractExtensionId
		{
			get
			{
				return this._ContractExtensionId;
			}
			set
			{
				if ((this._ContractExtensionId != value))
				{
					if (this._ContractExtension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractExtensionIdChanging(value);
					this.SendPropertyChanging();
					this._ContractExtensionId = value;
					this.SendPropertyChanged("ContractExtensionId");
					this.OnContractExtensionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(50)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_from_date", DbType="Date")]
		public System.Nullable<System.DateTime> from_date
		{
			get
			{
				return this._from_date;
			}
			set
			{
				if ((this._from_date != value))
				{
					this.Onfrom_dateChanging(value);
					this.SendPropertyChanging();
					this._from_date = value;
					this.SendPropertyChanged("from_date");
					this.Onfrom_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_to_date", DbType="Date")]
		public System.Nullable<System.DateTime> to_date
		{
			get
			{
				return this._to_date;
			}
			set
			{
				if ((this._to_date != value))
				{
					this.Onto_dateChanging(value);
					this.SendPropertyChanging();
					this._to_date = value;
					this.SendPropertyChanged("to_date");
					this.Onto_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookNo", DbType="Int")]
		public System.Nullable<int> BookNo
		{
			get
			{
				return this._BookNo;
			}
			set
			{
				if ((this._BookNo != value))
				{
					this.OnBookNoChanging(value);
					this.SendPropertyChanging();
					this._BookNo = value;
					this.SendPropertyChanged("BookNo");
					this.OnBookNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDate", DbType="Date")]
		public System.Nullable<System.DateTime> BookDate
		{
			get
			{
				return this._BookDate;
			}
			set
			{
				if ((this._BookDate != value))
				{
					this.OnBookDateChanging(value);
					this.SendPropertyChanging();
					this._BookDate = value;
					this.SendPropertyChanged("BookDate");
					this.OnBookDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractExtension_delay_table2", Storage="_ContractExtension", ThisKey="ContractExtensionId", OtherKey="ContractExtensionId", IsForeignKey=true)]
		public ContractExtension ContractExtension
		{
			get
			{
				return this._ContractExtension.Entity;
			}
			set
			{
				ContractExtension previousValue = this._ContractExtension.Entity;
				if (((previousValue != value) 
							|| (this._ContractExtension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContractExtension.Entity = null;
						previousValue.delay_table2s.Remove(this);
					}
					this._ContractExtension.Entity = value;
					if ((value != null))
					{
						value.delay_table2s.Add(this);
						this._ContractExtensionId = value.ContractExtensionId;
					}
					else
					{
						this._ContractExtensionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ContractExtension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.extenation_table")]
	public partial class extenation_table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _project_id;
		
		private string _Duration;
		
		private System.Nullable<System.DateTime> _from_date;
		
		private System.Nullable<System.DateTime> _to_date;
		
		private System.Nullable<int> _BookNo;
		
		private System.Nullable<System.DateTime> _BookDate;
		
		private EntityRef<project_table> _project_table;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onproject_idChanging(System.Nullable<int> value);
    partial void Onproject_idChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void Onfrom_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onfrom_dateChanged();
    partial void Onto_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onto_dateChanged();
    partial void OnBookNoChanging(System.Nullable<int> value);
    partial void OnBookNoChanged();
    partial void OnBookDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBookDateChanged();
    #endregion
		
		public extenation_table()
		{
			this._project_table = default(EntityRef<project_table>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int")]
		public System.Nullable<int> project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					if (this._project_table.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproject_idChanging(value);
					this.SendPropertyChanging();
					this._project_id = value;
					this.SendPropertyChanged("project_id");
					this.Onproject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(50)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_from_date", DbType="Date")]
		public System.Nullable<System.DateTime> from_date
		{
			get
			{
				return this._from_date;
			}
			set
			{
				if ((this._from_date != value))
				{
					this.Onfrom_dateChanging(value);
					this.SendPropertyChanging();
					this._from_date = value;
					this.SendPropertyChanged("from_date");
					this.Onfrom_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_to_date", DbType="Date")]
		public System.Nullable<System.DateTime> to_date
		{
			get
			{
				return this._to_date;
			}
			set
			{
				if ((this._to_date != value))
				{
					this.Onto_dateChanging(value);
					this.SendPropertyChanging();
					this._to_date = value;
					this.SendPropertyChanged("to_date");
					this.Onto_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookNo", DbType="Int")]
		public System.Nullable<int> BookNo
		{
			get
			{
				return this._BookNo;
			}
			set
			{
				if ((this._BookNo != value))
				{
					this.OnBookNoChanging(value);
					this.SendPropertyChanging();
					this._BookNo = value;
					this.SendPropertyChanged("BookNo");
					this.OnBookNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDate", DbType="Date")]
		public System.Nullable<System.DateTime> BookDate
		{
			get
			{
				return this._BookDate;
			}
			set
			{
				if ((this._BookDate != value))
				{
					this.OnBookDateChanging(value);
					this.SendPropertyChanging();
					this._BookDate = value;
					this.SendPropertyChanged("BookDate");
					this.OnBookDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_table_extenation_table", Storage="_project_table", ThisKey="project_id", OtherKey="project_id", IsForeignKey=true)]
		public project_table project_table
		{
			get
			{
				return this._project_table.Entity;
			}
			set
			{
				project_table previousValue = this._project_table.Entity;
				if (((previousValue != value) 
							|| (this._project_table.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project_table.Entity = null;
						previousValue.extenation_tables.Remove(this);
					}
					this._project_table.Entity = value;
					if ((value != null))
					{
						value.extenation_tables.Add(this);
						this._project_id = value.project_id;
					}
					else
					{
						this._project_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("project_table");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.extenation_table2")]
	public partial class extenation_table2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _ContractExtensionId;
		
		private string _Duration;
		
		private System.Nullable<System.DateTime> _from_date;
		
		private System.Nullable<System.DateTime> _to_date;
		
		private System.Nullable<int> _BookNo;
		
		private System.Nullable<System.DateTime> _BookDate;
		
		private EntityRef<ContractExtension> _ContractExtension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnContractExtensionIdChanging(System.Nullable<int> value);
    partial void OnContractExtensionIdChanged();
    partial void OnDurationChanging(string value);
    partial void OnDurationChanged();
    partial void Onfrom_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onfrom_dateChanged();
    partial void Onto_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onto_dateChanged();
    partial void OnBookNoChanging(System.Nullable<int> value);
    partial void OnBookNoChanged();
    partial void OnBookDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBookDateChanged();
    #endregion
		
		public extenation_table2()
		{
			this._ContractExtension = default(EntityRef<ContractExtension>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractExtensionId", DbType="Int")]
		public System.Nullable<int> ContractExtensionId
		{
			get
			{
				return this._ContractExtensionId;
			}
			set
			{
				if ((this._ContractExtensionId != value))
				{
					if (this._ContractExtension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractExtensionIdChanging(value);
					this.SendPropertyChanging();
					this._ContractExtensionId = value;
					this.SendPropertyChanged("ContractExtensionId");
					this.OnContractExtensionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(50)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_from_date", DbType="Date")]
		public System.Nullable<System.DateTime> from_date
		{
			get
			{
				return this._from_date;
			}
			set
			{
				if ((this._from_date != value))
				{
					this.Onfrom_dateChanging(value);
					this.SendPropertyChanging();
					this._from_date = value;
					this.SendPropertyChanged("from_date");
					this.Onfrom_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_to_date", DbType="Date")]
		public System.Nullable<System.DateTime> to_date
		{
			get
			{
				return this._to_date;
			}
			set
			{
				if ((this._to_date != value))
				{
					this.Onto_dateChanging(value);
					this.SendPropertyChanging();
					this._to_date = value;
					this.SendPropertyChanged("to_date");
					this.Onto_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookNo", DbType="Int")]
		public System.Nullable<int> BookNo
		{
			get
			{
				return this._BookNo;
			}
			set
			{
				if ((this._BookNo != value))
				{
					this.OnBookNoChanging(value);
					this.SendPropertyChanging();
					this._BookNo = value;
					this.SendPropertyChanged("BookNo");
					this.OnBookNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDate", DbType="Date")]
		public System.Nullable<System.DateTime> BookDate
		{
			get
			{
				return this._BookDate;
			}
			set
			{
				if ((this._BookDate != value))
				{
					this.OnBookDateChanging(value);
					this.SendPropertyChanging();
					this._BookDate = value;
					this.SendPropertyChanged("BookDate");
					this.OnBookDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractExtension_extenation_table2", Storage="_ContractExtension", ThisKey="ContractExtensionId", OtherKey="ContractExtensionId", IsForeignKey=true)]
		public ContractExtension ContractExtension
		{
			get
			{
				return this._ContractExtension.Entity;
			}
			set
			{
				ContractExtension previousValue = this._ContractExtension.Entity;
				if (((previousValue != value) 
							|| (this._ContractExtension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContractExtension.Entity = null;
						previousValue.extenation_table2s.Remove(this);
					}
					this._ContractExtension.Entity = value;
					if ((value != null))
					{
						value.extenation_table2s.Add(this);
						this._ContractExtensionId = value.ContractExtensionId;
					}
					else
					{
						this._ContractExtensionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ContractExtension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invoice_table")]
	public partial class invoice_table
	{
		
		private System.Nullable<int> _invoice_id;
		
		private System.Nullable<int> _project_id;
		
		private System.Nullable<int> _invoice_no;
		
		private System.Nullable<System.DateTime> _invoice_date;
		
		private string _check_no;
		
		private System.Nullable<System.DateTime> _check_date;
		
		private string _document_no;
		
		private System.Nullable<System.DateTime> _document_date;
		
		private System.Nullable<int> _Work_Performed;
		
		private System.Nullable<int> _decres_object;
		
		private System.Nullable<int> _totalWorAndDecres;
		
		private System.Nullable<int> _invoice_offer;
		
		private System.Nullable<int> _decres_secretariats;
		
		private System.Nullable<int> _decres_tax;
		
		private System.Nullable<int> _decres_deffrent1;
		
		private System.Nullable<int> _decres_deffrent2;
		
		private string _decres_type;
		
		private System.Nullable<int> _amount_received;
		
		private string _Notes;
		
		private System.Data.Linq.Binary _image;
		
		public invoice_table()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_id", DbType="Int")]
		public System.Nullable<int> invoice_id
		{
			get
			{
				return this._invoice_id;
			}
			set
			{
				if ((this._invoice_id != value))
				{
					this._invoice_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int")]
		public System.Nullable<int> project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					this._project_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_no", DbType="Int")]
		public System.Nullable<int> invoice_no
		{
			get
			{
				return this._invoice_no;
			}
			set
			{
				if ((this._invoice_no != value))
				{
					this._invoice_no = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> invoice_date
		{
			get
			{
				return this._invoice_date;
			}
			set
			{
				if ((this._invoice_date != value))
				{
					this._invoice_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_check_no", DbType="NVarChar(1)")]
		public string check_no
		{
			get
			{
				return this._check_no;
			}
			set
			{
				if ((this._check_no != value))
				{
					this._check_no = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_check_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> check_date
		{
			get
			{
				return this._check_date;
			}
			set
			{
				if ((this._check_date != value))
				{
					this._check_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_document_no", DbType="NVarChar(1)")]
		public string document_no
		{
			get
			{
				return this._document_no;
			}
			set
			{
				if ((this._document_no != value))
				{
					this._document_no = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_document_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> document_date
		{
			get
			{
				return this._document_date;
			}
			set
			{
				if ((this._document_date != value))
				{
					this._document_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Work_Performed", DbType="Int")]
		public System.Nullable<int> Work_Performed
		{
			get
			{
				return this._Work_Performed;
			}
			set
			{
				if ((this._Work_Performed != value))
				{
					this._Work_Performed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decres_object", DbType="Int")]
		public System.Nullable<int> decres_object
		{
			get
			{
				return this._decres_object;
			}
			set
			{
				if ((this._decres_object != value))
				{
					this._decres_object = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalWorAndDecres", DbType="Int")]
		public System.Nullable<int> totalWorAndDecres
		{
			get
			{
				return this._totalWorAndDecres;
			}
			set
			{
				if ((this._totalWorAndDecres != value))
				{
					this._totalWorAndDecres = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_offer", DbType="Int")]
		public System.Nullable<int> invoice_offer
		{
			get
			{
				return this._invoice_offer;
			}
			set
			{
				if ((this._invoice_offer != value))
				{
					this._invoice_offer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decres_secretariats", DbType="Int")]
		public System.Nullable<int> decres_secretariats
		{
			get
			{
				return this._decres_secretariats;
			}
			set
			{
				if ((this._decres_secretariats != value))
				{
					this._decres_secretariats = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decres_tax", DbType="Int")]
		public System.Nullable<int> decres_tax
		{
			get
			{
				return this._decres_tax;
			}
			set
			{
				if ((this._decres_tax != value))
				{
					this._decres_tax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decres_deffrent1", DbType="Int")]
		public System.Nullable<int> decres_deffrent1
		{
			get
			{
				return this._decres_deffrent1;
			}
			set
			{
				if ((this._decres_deffrent1 != value))
				{
					this._decres_deffrent1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decres_deffrent2", DbType="Int")]
		public System.Nullable<int> decres_deffrent2
		{
			get
			{
				return this._decres_deffrent2;
			}
			set
			{
				if ((this._decres_deffrent2 != value))
				{
					this._decres_deffrent2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decres_type", DbType="NVarChar(1)")]
		public string decres_type
		{
			get
			{
				return this._decres_type;
			}
			set
			{
				if ((this._decres_type != value))
				{
					this._decres_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount_received", DbType="Int")]
		public System.Nullable<int> amount_received
		{
			get
			{
				return this._amount_received;
			}
			set
			{
				if ((this._amount_received != value))
				{
					this._amount_received = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(1)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this._image = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invoice_table2")]
	public partial class invoice_table2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _invoice_id;
		
		private System.Nullable<int> _ContractExtensionId;
		
		private System.Nullable<int> _invoice_no;
		
		private System.Nullable<System.DateTime> _invoice_date;
		
		private string _check_no;
		
		private System.Nullable<System.DateTime> _check_date;
		
		private string _document_no;
		
		private System.Nullable<System.DateTime> _document_date;
		
		private System.Nullable<int> _Work_Performed;
		
		private System.Nullable<int> _decres_object;
		
		private System.Nullable<int> _totalWorAndDecres;
		
		private System.Nullable<int> _invoice_offer;
		
		private System.Nullable<int> _decres_secretariats;
		
		private System.Nullable<int> _decres_tax;
		
		private System.Nullable<int> _decres_deffrent1;
		
		private System.Nullable<int> _decres_deffrent2;
		
		private string _decres_type;
		
		private System.Nullable<int> _amount_received;
		
		private string _Notes;
		
		private System.Data.Linq.Binary _image;
		
		private EntityRef<ContractExtension> _ContractExtension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oninvoice_idChanging(int value);
    partial void Oninvoice_idChanged();
    partial void OnContractExtensionIdChanging(System.Nullable<int> value);
    partial void OnContractExtensionIdChanged();
    partial void Oninvoice_noChanging(System.Nullable<int> value);
    partial void Oninvoice_noChanged();
    partial void Oninvoice_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oninvoice_dateChanged();
    partial void Oncheck_noChanging(string value);
    partial void Oncheck_noChanged();
    partial void Oncheck_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncheck_dateChanged();
    partial void Ondocument_noChanging(string value);
    partial void Ondocument_noChanged();
    partial void Ondocument_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ondocument_dateChanged();
    partial void OnWork_PerformedChanging(System.Nullable<int> value);
    partial void OnWork_PerformedChanged();
    partial void Ondecres_objectChanging(System.Nullable<int> value);
    partial void Ondecres_objectChanged();
    partial void OntotalWorAndDecresChanging(System.Nullable<int> value);
    partial void OntotalWorAndDecresChanged();
    partial void Oninvoice_offerChanging(System.Nullable<int> value);
    partial void Oninvoice_offerChanged();
    partial void Ondecres_secretariatsChanging(System.Nullable<int> value);
    partial void Ondecres_secretariatsChanged();
    partial void Ondecres_taxChanging(System.Nullable<int> value);
    partial void Ondecres_taxChanged();
    partial void Ondecres_deffrent1Changing(System.Nullable<int> value);
    partial void Ondecres_deffrent1Changed();
    partial void Ondecres_deffrent2Changing(System.Nullable<int> value);
    partial void Ondecres_deffrent2Changed();
    partial void Ondecres_typeChanging(string value);
    partial void Ondecres_typeChanged();
    partial void Onamount_receivedChanging(System.Nullable<int> value);
    partial void Onamount_receivedChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnimageChanging(System.Data.Linq.Binary value);
    partial void OnimageChanged();
    #endregion
		
		public invoice_table2()
		{
			this._ContractExtension = default(EntityRef<ContractExtension>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int invoice_id
		{
			get
			{
				return this._invoice_id;
			}
			set
			{
				if ((this._invoice_id != value))
				{
					this.Oninvoice_idChanging(value);
					this.SendPropertyChanging();
					this._invoice_id = value;
					this.SendPropertyChanged("invoice_id");
					this.Oninvoice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractExtensionId", DbType="Int")]
		public System.Nullable<int> ContractExtensionId
		{
			get
			{
				return this._ContractExtensionId;
			}
			set
			{
				if ((this._ContractExtensionId != value))
				{
					if (this._ContractExtension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractExtensionIdChanging(value);
					this.SendPropertyChanging();
					this._ContractExtensionId = value;
					this.SendPropertyChanged("ContractExtensionId");
					this.OnContractExtensionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_no", DbType="Int")]
		public System.Nullable<int> invoice_no
		{
			get
			{
				return this._invoice_no;
			}
			set
			{
				if ((this._invoice_no != value))
				{
					this.Oninvoice_noChanging(value);
					this.SendPropertyChanging();
					this._invoice_no = value;
					this.SendPropertyChanged("invoice_no");
					this.Oninvoice_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> invoice_date
		{
			get
			{
				return this._invoice_date;
			}
			set
			{
				if ((this._invoice_date != value))
				{
					this.Oninvoice_dateChanging(value);
					this.SendPropertyChanging();
					this._invoice_date = value;
					this.SendPropertyChanged("invoice_date");
					this.Oninvoice_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_check_no", DbType="NVarChar(1)")]
		public string check_no
		{
			get
			{
				return this._check_no;
			}
			set
			{
				if ((this._check_no != value))
				{
					this.Oncheck_noChanging(value);
					this.SendPropertyChanging();
					this._check_no = value;
					this.SendPropertyChanged("check_no");
					this.Oncheck_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_check_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> check_date
		{
			get
			{
				return this._check_date;
			}
			set
			{
				if ((this._check_date != value))
				{
					this.Oncheck_dateChanging(value);
					this.SendPropertyChanging();
					this._check_date = value;
					this.SendPropertyChanged("check_date");
					this.Oncheck_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_document_no", DbType="NVarChar(1)")]
		public string document_no
		{
			get
			{
				return this._document_no;
			}
			set
			{
				if ((this._document_no != value))
				{
					this.Ondocument_noChanging(value);
					this.SendPropertyChanging();
					this._document_no = value;
					this.SendPropertyChanged("document_no");
					this.Ondocument_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_document_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> document_date
		{
			get
			{
				return this._document_date;
			}
			set
			{
				if ((this._document_date != value))
				{
					this.Ondocument_dateChanging(value);
					this.SendPropertyChanging();
					this._document_date = value;
					this.SendPropertyChanged("document_date");
					this.Ondocument_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Work_Performed", DbType="Int")]
		public System.Nullable<int> Work_Performed
		{
			get
			{
				return this._Work_Performed;
			}
			set
			{
				if ((this._Work_Performed != value))
				{
					this.OnWork_PerformedChanging(value);
					this.SendPropertyChanging();
					this._Work_Performed = value;
					this.SendPropertyChanged("Work_Performed");
					this.OnWork_PerformedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decres_object", DbType="Int")]
		public System.Nullable<int> decres_object
		{
			get
			{
				return this._decres_object;
			}
			set
			{
				if ((this._decres_object != value))
				{
					this.Ondecres_objectChanging(value);
					this.SendPropertyChanging();
					this._decres_object = value;
					this.SendPropertyChanged("decres_object");
					this.Ondecres_objectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalWorAndDecres", DbType="Int")]
		public System.Nullable<int> totalWorAndDecres
		{
			get
			{
				return this._totalWorAndDecres;
			}
			set
			{
				if ((this._totalWorAndDecres != value))
				{
					this.OntotalWorAndDecresChanging(value);
					this.SendPropertyChanging();
					this._totalWorAndDecres = value;
					this.SendPropertyChanged("totalWorAndDecres");
					this.OntotalWorAndDecresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_offer", DbType="Int")]
		public System.Nullable<int> invoice_offer
		{
			get
			{
				return this._invoice_offer;
			}
			set
			{
				if ((this._invoice_offer != value))
				{
					this.Oninvoice_offerChanging(value);
					this.SendPropertyChanging();
					this._invoice_offer = value;
					this.SendPropertyChanged("invoice_offer");
					this.Oninvoice_offerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decres_secretariats", DbType="Int")]
		public System.Nullable<int> decres_secretariats
		{
			get
			{
				return this._decres_secretariats;
			}
			set
			{
				if ((this._decres_secretariats != value))
				{
					this.Ondecres_secretariatsChanging(value);
					this.SendPropertyChanging();
					this._decres_secretariats = value;
					this.SendPropertyChanged("decres_secretariats");
					this.Ondecres_secretariatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decres_tax", DbType="Int")]
		public System.Nullable<int> decres_tax
		{
			get
			{
				return this._decres_tax;
			}
			set
			{
				if ((this._decres_tax != value))
				{
					this.Ondecres_taxChanging(value);
					this.SendPropertyChanging();
					this._decres_tax = value;
					this.SendPropertyChanged("decres_tax");
					this.Ondecres_taxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decres_deffrent1", DbType="Int")]
		public System.Nullable<int> decres_deffrent1
		{
			get
			{
				return this._decres_deffrent1;
			}
			set
			{
				if ((this._decres_deffrent1 != value))
				{
					this.Ondecres_deffrent1Changing(value);
					this.SendPropertyChanging();
					this._decres_deffrent1 = value;
					this.SendPropertyChanged("decres_deffrent1");
					this.Ondecres_deffrent1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decres_deffrent2", DbType="Int")]
		public System.Nullable<int> decres_deffrent2
		{
			get
			{
				return this._decres_deffrent2;
			}
			set
			{
				if ((this._decres_deffrent2 != value))
				{
					this.Ondecres_deffrent2Changing(value);
					this.SendPropertyChanging();
					this._decres_deffrent2 = value;
					this.SendPropertyChanged("decres_deffrent2");
					this.Ondecres_deffrent2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_decres_type", DbType="NVarChar(1)")]
		public string decres_type
		{
			get
			{
				return this._decres_type;
			}
			set
			{
				if ((this._decres_type != value))
				{
					this.Ondecres_typeChanging(value);
					this.SendPropertyChanging();
					this._decres_type = value;
					this.SendPropertyChanged("decres_type");
					this.Ondecres_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount_received", DbType="Int")]
		public System.Nullable<int> amount_received
		{
			get
			{
				return this._amount_received;
			}
			set
			{
				if ((this._amount_received != value))
				{
					this.Onamount_receivedChanging(value);
					this.SendPropertyChanging();
					this._amount_received = value;
					this.SendPropertyChanged("amount_received");
					this.Onamount_receivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(1)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContractExtension_invoice_table2", Storage="_ContractExtension", ThisKey="ContractExtensionId", OtherKey="ContractExtensionId", IsForeignKey=true)]
		public ContractExtension ContractExtension
		{
			get
			{
				return this._ContractExtension.Entity;
			}
			set
			{
				ContractExtension previousValue = this._ContractExtension.Entity;
				if (((previousValue != value) 
							|| (this._ContractExtension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContractExtension.Entity = null;
						previousValue.invoice_table2s.Remove(this);
					}
					this._ContractExtension.Entity = value;
					if ((value != null))
					{
						value.invoice_table2s.Add(this);
						this._ContractExtensionId = value.ContractExtensionId;
					}
					else
					{
						this._ContractExtensionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ContractExtension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.jobTitle")]
	public partial class jobTitle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobTitleId;
		
		private string _job_title;
		
		private EntityRef<jobTitle> _jobTitle2;
		
		private EntitySet<project_table> _project_tables;
		
		private EntityRef<jobTitle> _jobTitle1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobTitleIdChanging(int value);
    partial void OnJobTitleIdChanged();
    partial void Onjob_titleChanging(string value);
    partial void Onjob_titleChanged();
    #endregion
		
		public jobTitle()
		{
			this._jobTitle2 = default(EntityRef<jobTitle>);
			this._project_tables = new EntitySet<project_table>(new Action<project_table>(this.attach_project_tables), new Action<project_table>(this.detach_project_tables));
			this._jobTitle1 = default(EntityRef<jobTitle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobTitleId
		{
			get
			{
				return this._JobTitleId;
			}
			set
			{
				if ((this._JobTitleId != value))
				{
					if (this._jobTitle1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobTitleIdChanging(value);
					this.SendPropertyChanging();
					this._JobTitleId = value;
					this.SendPropertyChanged("JobTitleId");
					this.OnJobTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job_title", DbType="NVarChar(50)")]
		public string job_title
		{
			get
			{
				return this._job_title;
			}
			set
			{
				if ((this._job_title != value))
				{
					this.Onjob_titleChanging(value);
					this.SendPropertyChanging();
					this._job_title = value;
					this.SendPropertyChanged("job_title");
					this.Onjob_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="jobTitle_jobTitle", Storage="_jobTitle2", ThisKey="JobTitleId", OtherKey="JobTitleId", IsUnique=true, IsForeignKey=false)]
		public jobTitle jobTitle2
		{
			get
			{
				return this._jobTitle2.Entity;
			}
			set
			{
				jobTitle previousValue = this._jobTitle2.Entity;
				if (((previousValue != value) 
							|| (this._jobTitle2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jobTitle2.Entity = null;
						previousValue.jobTitle1 = null;
					}
					this._jobTitle2.Entity = value;
					if ((value != null))
					{
						value.jobTitle1 = this;
					}
					this.SendPropertyChanged("jobTitle2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="jobTitle_project_table", Storage="_project_tables", ThisKey="JobTitleId", OtherKey="JobTitleId")]
		public EntitySet<project_table> project_tables
		{
			get
			{
				return this._project_tables;
			}
			set
			{
				this._project_tables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="jobTitle_jobTitle", Storage="_jobTitle1", ThisKey="JobTitleId", OtherKey="JobTitleId", IsForeignKey=true)]
		public jobTitle jobTitle1
		{
			get
			{
				return this._jobTitle1.Entity;
			}
			set
			{
				jobTitle previousValue = this._jobTitle1.Entity;
				if (((previousValue != value) 
							|| (this._jobTitle1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jobTitle1.Entity = null;
						previousValue.jobTitle2 = null;
					}
					this._jobTitle1.Entity = value;
					if ((value != null))
					{
						value.jobTitle2 = this;
						this._JobTitleId = value.JobTitleId;
					}
					else
					{
						this._JobTitleId = default(int);
					}
					this.SendPropertyChanged("jobTitle1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_project_tables(project_table entity)
		{
			this.SendPropertyChanging();
			entity.jobTitle = this;
		}
		
		private void detach_project_tables(project_table entity)
		{
			this.SendPropertyChanging();
			entity.jobTitle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.project_t")]
	public partial class project_t : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjectNameId;
		
		private string _project_name;
		
		private EntityRef<project_t> _project_t2;
		
		private EntitySet<project_table> _project_tables;
		
		private EntityRef<project_t> _project_t1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjectNameIdChanging(int value);
    partial void OnProjectNameIdChanged();
    partial void Onproject_nameChanging(string value);
    partial void Onproject_nameChanged();
    #endregion
		
		public project_t()
		{
			this._project_t2 = default(EntityRef<project_t>);
			this._project_tables = new EntitySet<project_table>(new Action<project_table>(this.attach_project_tables), new Action<project_table>(this.detach_project_tables));
			this._project_t1 = default(EntityRef<project_t>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectNameId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProjectNameId
		{
			get
			{
				return this._ProjectNameId;
			}
			set
			{
				if ((this._ProjectNameId != value))
				{
					if (this._project_t1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectNameIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectNameId = value;
					this.SendPropertyChanged("ProjectNameId");
					this.OnProjectNameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_name", DbType="NVarChar(50)")]
		public string project_name
		{
			get
			{
				return this._project_name;
			}
			set
			{
				if ((this._project_name != value))
				{
					this.Onproject_nameChanging(value);
					this.SendPropertyChanging();
					this._project_name = value;
					this.SendPropertyChanged("project_name");
					this.Onproject_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_t_project_t", Storage="_project_t2", ThisKey="ProjectNameId", OtherKey="ProjectNameId", IsUnique=true, IsForeignKey=false)]
		public project_t project_t2
		{
			get
			{
				return this._project_t2.Entity;
			}
			set
			{
				project_t previousValue = this._project_t2.Entity;
				if (((previousValue != value) 
							|| (this._project_t2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project_t2.Entity = null;
						previousValue.project_t1 = null;
					}
					this._project_t2.Entity = value;
					if ((value != null))
					{
						value.project_t1 = this;
					}
					this.SendPropertyChanged("project_t2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_t_project_table", Storage="_project_tables", ThisKey="ProjectNameId", OtherKey="ProjectNameId")]
		public EntitySet<project_table> project_tables
		{
			get
			{
				return this._project_tables;
			}
			set
			{
				this._project_tables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_t_project_t", Storage="_project_t1", ThisKey="ProjectNameId", OtherKey="ProjectNameId", IsForeignKey=true)]
		public project_t project_t1
		{
			get
			{
				return this._project_t1.Entity;
			}
			set
			{
				project_t previousValue = this._project_t1.Entity;
				if (((previousValue != value) 
							|| (this._project_t1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project_t1.Entity = null;
						previousValue.project_t2 = null;
					}
					this._project_t1.Entity = value;
					if ((value != null))
					{
						value.project_t2 = this;
						this._ProjectNameId = value.ProjectNameId;
					}
					else
					{
						this._ProjectNameId = default(int);
					}
					this.SendPropertyChanged("project_t1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_project_tables(project_table entity)
		{
			this.SendPropertyChanging();
			entity.project_t = this;
		}
		
		private void detach_project_tables(project_table entity)
		{
			this.SendPropertyChanging();
			entity.project_t = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.project_table")]
	public partial class project_table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _project_id;
		
		private System.Nullable<int> _JobTitleId;
		
		private System.Nullable<int> _ContractNameId;
		
		private System.Nullable<int> _ProjectNameId;
		
		private string _referralNo;
		
		private System.Nullable<System.DateTime> _referralDate;
		
		private string _contractNo;
		
		private System.Nullable<System.DateTime> _ContractDate;
		
		private string _ContractAmount;
		
		private string _ContractDuration;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _CompletionDate;
		
		private string _DailyFineAmount;
		
		private string _ExtensionTime;
		
		private string _InsurancePolicyNumber;
		
		private string _FinancialStampFee;
		
		private string _EngineersPensionFundFee;
		
		private string _StatutoryInsurances;
		
		private System.Data.Linq.Binary _Image;
		
		private string _FileName;
		
		private EntitySet<ContractExtension> _ContractExtensions;
		
		private EntitySet<delay_table> _delay_tables;
		
		private EntitySet<extenation_table> _extenation_tables;
		
		private EntityRef<contract_name> _contract_name;
		
		private EntityRef<jobTitle> _jobTitle;
		
		private EntityRef<project_t> _project_t;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onproject_idChanging(int value);
    partial void Onproject_idChanged();
    partial void OnJobTitleIdChanging(System.Nullable<int> value);
    partial void OnJobTitleIdChanged();
    partial void OnContractNameIdChanging(System.Nullable<int> value);
    partial void OnContractNameIdChanged();
    partial void OnProjectNameIdChanging(System.Nullable<int> value);
    partial void OnProjectNameIdChanged();
    partial void OnreferralNoChanging(string value);
    partial void OnreferralNoChanged();
    partial void OnreferralDateChanging(System.Nullable<System.DateTime> value);
    partial void OnreferralDateChanged();
    partial void OncontractNoChanging(string value);
    partial void OncontractNoChanged();
    partial void OnContractDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContractDateChanged();
    partial void OnContractAmountChanging(string value);
    partial void OnContractAmountChanged();
    partial void OnContractDurationChanging(string value);
    partial void OnContractDurationChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnCompletionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletionDateChanged();
    partial void OnDailyFineAmountChanging(string value);
    partial void OnDailyFineAmountChanged();
    partial void OnExtensionTimeChanging(string value);
    partial void OnExtensionTimeChanged();
    partial void OnInsurancePolicyNumberChanging(string value);
    partial void OnInsurancePolicyNumberChanged();
    partial void OnFinancialStampFeeChanging(string value);
    partial void OnFinancialStampFeeChanged();
    partial void OnEngineersPensionFundFeeChanging(string value);
    partial void OnEngineersPensionFundFeeChanged();
    partial void OnStatutoryInsurancesChanging(string value);
    partial void OnStatutoryInsurancesChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public project_table()
		{
			this._ContractExtensions = new EntitySet<ContractExtension>(new Action<ContractExtension>(this.attach_ContractExtensions), new Action<ContractExtension>(this.detach_ContractExtensions));
			this._delay_tables = new EntitySet<delay_table>(new Action<delay_table>(this.attach_delay_tables), new Action<delay_table>(this.detach_delay_tables));
			this._extenation_tables = new EntitySet<extenation_table>(new Action<extenation_table>(this.attach_extenation_tables), new Action<extenation_table>(this.detach_extenation_tables));
			this._contract_name = default(EntityRef<contract_name>);
			this._jobTitle = default(EntityRef<jobTitle>);
			this._project_t = default(EntityRef<project_t>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int project_id
		{
			get
			{
				return this._project_id;
			}
			set
			{
				if ((this._project_id != value))
				{
					this.Onproject_idChanging(value);
					this.SendPropertyChanging();
					this._project_id = value;
					this.SendPropertyChanged("project_id");
					this.Onproject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitleId", DbType="Int")]
		public System.Nullable<int> JobTitleId
		{
			get
			{
				return this._JobTitleId;
			}
			set
			{
				if ((this._JobTitleId != value))
				{
					if (this._jobTitle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobTitleIdChanging(value);
					this.SendPropertyChanging();
					this._JobTitleId = value;
					this.SendPropertyChanged("JobTitleId");
					this.OnJobTitleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNameId", DbType="Int")]
		public System.Nullable<int> ContractNameId
		{
			get
			{
				return this._ContractNameId;
			}
			set
			{
				if ((this._ContractNameId != value))
				{
					if (this._contract_name.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContractNameIdChanging(value);
					this.SendPropertyChanging();
					this._ContractNameId = value;
					this.SendPropertyChanged("ContractNameId");
					this.OnContractNameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectNameId", DbType="Int")]
		public System.Nullable<int> ProjectNameId
		{
			get
			{
				return this._ProjectNameId;
			}
			set
			{
				if ((this._ProjectNameId != value))
				{
					if (this._project_t.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectNameIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectNameId = value;
					this.SendPropertyChanged("ProjectNameId");
					this.OnProjectNameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referralNo", DbType="NVarChar(50)")]
		public string referralNo
		{
			get
			{
				return this._referralNo;
			}
			set
			{
				if ((this._referralNo != value))
				{
					this.OnreferralNoChanging(value);
					this.SendPropertyChanging();
					this._referralNo = value;
					this.SendPropertyChanged("referralNo");
					this.OnreferralNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referralDate", DbType="Date")]
		public System.Nullable<System.DateTime> referralDate
		{
			get
			{
				return this._referralDate;
			}
			set
			{
				if ((this._referralDate != value))
				{
					this.OnreferralDateChanging(value);
					this.SendPropertyChanging();
					this._referralDate = value;
					this.SendPropertyChanged("referralDate");
					this.OnreferralDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contractNo", DbType="NVarChar(50)")]
		public string contractNo
		{
			get
			{
				return this._contractNo;
			}
			set
			{
				if ((this._contractNo != value))
				{
					this.OncontractNoChanging(value);
					this.SendPropertyChanging();
					this._contractNo = value;
					this.SendPropertyChanged("contractNo");
					this.OncontractNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractDate", DbType="Date")]
		public System.Nullable<System.DateTime> ContractDate
		{
			get
			{
				return this._ContractDate;
			}
			set
			{
				if ((this._ContractDate != value))
				{
					this.OnContractDateChanging(value);
					this.SendPropertyChanging();
					this._ContractDate = value;
					this.SendPropertyChanged("ContractDate");
					this.OnContractDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractAmount", DbType="NVarChar(50)")]
		public string ContractAmount
		{
			get
			{
				return this._ContractAmount;
			}
			set
			{
				if ((this._ContractAmount != value))
				{
					this.OnContractAmountChanging(value);
					this.SendPropertyChanging();
					this._ContractAmount = value;
					this.SendPropertyChanged("ContractAmount");
					this.OnContractAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractDuration", DbType="NVarChar(50)")]
		public string ContractDuration
		{
			get
			{
				return this._ContractDuration;
			}
			set
			{
				if ((this._ContractDuration != value))
				{
					this.OnContractDurationChanging(value);
					this.SendPropertyChanging();
					this._ContractDuration = value;
					this.SendPropertyChanged("ContractDuration");
					this.OnContractDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompletionDate", DbType="Date")]
		public System.Nullable<System.DateTime> CompletionDate
		{
			get
			{
				return this._CompletionDate;
			}
			set
			{
				if ((this._CompletionDate != value))
				{
					this.OnCompletionDateChanging(value);
					this.SendPropertyChanging();
					this._CompletionDate = value;
					this.SendPropertyChanged("CompletionDate");
					this.OnCompletionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyFineAmount", DbType="NVarChar(50)")]
		public string DailyFineAmount
		{
			get
			{
				return this._DailyFineAmount;
			}
			set
			{
				if ((this._DailyFineAmount != value))
				{
					this.OnDailyFineAmountChanging(value);
					this.SendPropertyChanging();
					this._DailyFineAmount = value;
					this.SendPropertyChanged("DailyFineAmount");
					this.OnDailyFineAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionTime", DbType="NVarChar(50)")]
		public string ExtensionTime
		{
			get
			{
				return this._ExtensionTime;
			}
			set
			{
				if ((this._ExtensionTime != value))
				{
					this.OnExtensionTimeChanging(value);
					this.SendPropertyChanging();
					this._ExtensionTime = value;
					this.SendPropertyChanged("ExtensionTime");
					this.OnExtensionTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsurancePolicyNumber", DbType="NVarChar(50)")]
		public string InsurancePolicyNumber
		{
			get
			{
				return this._InsurancePolicyNumber;
			}
			set
			{
				if ((this._InsurancePolicyNumber != value))
				{
					this.OnInsurancePolicyNumberChanging(value);
					this.SendPropertyChanging();
					this._InsurancePolicyNumber = value;
					this.SendPropertyChanged("InsurancePolicyNumber");
					this.OnInsurancePolicyNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialStampFee", DbType="NVarChar(50)")]
		public string FinancialStampFee
		{
			get
			{
				return this._FinancialStampFee;
			}
			set
			{
				if ((this._FinancialStampFee != value))
				{
					this.OnFinancialStampFeeChanging(value);
					this.SendPropertyChanging();
					this._FinancialStampFee = value;
					this.SendPropertyChanged("FinancialStampFee");
					this.OnFinancialStampFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineersPensionFundFee", DbType="NVarChar(50)")]
		public string EngineersPensionFundFee
		{
			get
			{
				return this._EngineersPensionFundFee;
			}
			set
			{
				if ((this._EngineersPensionFundFee != value))
				{
					this.OnEngineersPensionFundFeeChanging(value);
					this.SendPropertyChanging();
					this._EngineersPensionFundFee = value;
					this.SendPropertyChanged("EngineersPensionFundFee");
					this.OnEngineersPensionFundFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatutoryInsurances", DbType="NVarChar(50)")]
		public string StatutoryInsurances
		{
			get
			{
				return this._StatutoryInsurances;
			}
			set
			{
				if ((this._StatutoryInsurances != value))
				{
					this.OnStatutoryInsurancesChanging(value);
					this.SendPropertyChanging();
					this._StatutoryInsurances = value;
					this.SendPropertyChanged("StatutoryInsurances");
					this.OnStatutoryInsurancesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(50)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_table_ContractExtension", Storage="_ContractExtensions", ThisKey="project_id", OtherKey="project_id")]
		public EntitySet<ContractExtension> ContractExtensions
		{
			get
			{
				return this._ContractExtensions;
			}
			set
			{
				this._ContractExtensions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_table_delay_table", Storage="_delay_tables", ThisKey="project_id", OtherKey="project_id")]
		public EntitySet<delay_table> delay_tables
		{
			get
			{
				return this._delay_tables;
			}
			set
			{
				this._delay_tables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_table_extenation_table", Storage="_extenation_tables", ThisKey="project_id", OtherKey="project_id")]
		public EntitySet<extenation_table> extenation_tables
		{
			get
			{
				return this._extenation_tables;
			}
			set
			{
				this._extenation_tables.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="contract_name_project_table", Storage="_contract_name", ThisKey="ContractNameId", OtherKey="ContractNameId", IsForeignKey=true)]
		public contract_name contract_name
		{
			get
			{
				return this._contract_name.Entity;
			}
			set
			{
				contract_name previousValue = this._contract_name.Entity;
				if (((previousValue != value) 
							|| (this._contract_name.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._contract_name.Entity = null;
						previousValue.project_tables.Remove(this);
					}
					this._contract_name.Entity = value;
					if ((value != null))
					{
						value.project_tables.Add(this);
						this._ContractNameId = value.ContractNameId;
					}
					else
					{
						this._ContractNameId = default(Nullable<int>);
					}
					this.SendPropertyChanged("contract_name");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="jobTitle_project_table", Storage="_jobTitle", ThisKey="JobTitleId", OtherKey="JobTitleId", IsForeignKey=true)]
		public jobTitle jobTitle
		{
			get
			{
				return this._jobTitle.Entity;
			}
			set
			{
				jobTitle previousValue = this._jobTitle.Entity;
				if (((previousValue != value) 
							|| (this._jobTitle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._jobTitle.Entity = null;
						previousValue.project_tables.Remove(this);
					}
					this._jobTitle.Entity = value;
					if ((value != null))
					{
						value.project_tables.Add(this);
						this._JobTitleId = value.JobTitleId;
					}
					else
					{
						this._JobTitleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("jobTitle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="project_t_project_table", Storage="_project_t", ThisKey="ProjectNameId", OtherKey="ProjectNameId", IsForeignKey=true)]
		public project_t project_t
		{
			get
			{
				return this._project_t.Entity;
			}
			set
			{
				project_t previousValue = this._project_t.Entity;
				if (((previousValue != value) 
							|| (this._project_t.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._project_t.Entity = null;
						previousValue.project_tables.Remove(this);
					}
					this._project_t.Entity = value;
					if ((value != null))
					{
						value.project_tables.Add(this);
						this._ProjectNameId = value.ProjectNameId;
					}
					else
					{
						this._ProjectNameId = default(Nullable<int>);
					}
					this.SendPropertyChanged("project_t");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContractExtensions(ContractExtension entity)
		{
			this.SendPropertyChanging();
			entity.project_table = this;
		}
		
		private void detach_ContractExtensions(ContractExtension entity)
		{
			this.SendPropertyChanging();
			entity.project_table = null;
		}
		
		private void attach_delay_tables(delay_table entity)
		{
			this.SendPropertyChanging();
			entity.project_table = this;
		}
		
		private void detach_delay_tables(delay_table entity)
		{
			this.SendPropertyChanging();
			entity.project_table = null;
		}
		
		private void attach_extenation_tables(extenation_table entity)
		{
			this.SendPropertyChanging();
			entity.project_table = this;
		}
		
		private void detach_extenation_tables(extenation_table entity)
		{
			this.SendPropertyChanging();
			entity.project_table = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _UserName;
		
		private string _Password;
		
		private byte _UserType;
		
		private int _ScreenAccessProfileID;
		
		private System.Nullable<int> _IsActive;
		
		private bool _AccessType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnUserTypeChanging(byte value);
    partial void OnUserTypeChanged();
    partial void OnScreenAccessProfileIDChanging(int value);
    partial void OnScreenAccessProfileIDChanged();
    partial void OnIsActiveChanging(System.Nullable<int> value);
    partial void OnIsActiveChanged();
    partial void OnAccessTypeChanging(bool value);
    partial void OnAccessTypeChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="TinyInt NOT NULL")]
		public byte UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenAccessProfileID", DbType="Int NOT NULL")]
		public int ScreenAccessProfileID
		{
			get
			{
				return this._ScreenAccessProfileID;
			}
			set
			{
				if ((this._ScreenAccessProfileID != value))
				{
					this.OnScreenAccessProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ScreenAccessProfileID = value;
					this.SendPropertyChanged("ScreenAccessProfileID");
					this.OnScreenAccessProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Int")]
		public System.Nullable<int> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessType", DbType="Bit NOT NULL")]
		public bool AccessType
		{
			get
			{
				return this._AccessType;
			}
			set
			{
				if ((this._AccessType != value))
				{
					this.OnAccessTypeChanging(value);
					this.SendPropertyChanging();
					this._AccessType = value;
					this.SendPropertyChanged("AccessType");
					this.OnAccessTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSettingProfile")]
	public partial class UserSettingProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProfileName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProfileNameChanging(string value);
    partial void OnProfileNameChanged();
    #endregion
		
		public UserSettingProfile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileName", DbType="NVarChar(MAX)")]
		public string ProfileName
		{
			get
			{
				return this._ProfileName;
			}
			set
			{
				if ((this._ProfileName != value))
				{
					this.OnProfileNameChanging(value);
					this.SendPropertyChanging();
					this._ProfileName = value;
					this.SendPropertyChanged("ProfileName");
					this.OnProfileNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSettingProfileProperties")]
	public partial class UserSettingProfileProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ProfileID;
		
		private string _PropertyName;
		
		private System.Data.Linq.Binary _PropertyValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProfileIDChanging(System.Nullable<int> value);
    partial void OnProfileIDChanged();
    partial void OnPropertyNameChanging(string value);
    partial void OnPropertyNameChanged();
    partial void OnPropertyValueChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValueChanged();
    #endregion
		
		public UserSettingProfileProperty()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", DbType="Int")]
		public System.Nullable<int> ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="NVarChar(MAX)")]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this.OnPropertyNameChanging(value);
					this.SendPropertyChanging();
					this._PropertyName = value;
					this.SendPropertyChanged("PropertyName");
					this.OnPropertyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValue", DbType="VarBinary(8000)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValue
		{
			get
			{
				return this._PropertyValue;
			}
			set
			{
				if ((this._PropertyValue != value))
				{
					this.OnPropertyValueChanging(value);
					this.SendPropertyChanging();
					this._PropertyValue = value;
					this.SendPropertyChanged("PropertyValue");
					this.OnPropertyValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
